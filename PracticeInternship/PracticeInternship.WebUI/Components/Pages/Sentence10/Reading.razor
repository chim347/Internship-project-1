@page "/sentence10/reading"
@inject PracticeInternship.Application.Interfaces.Interface_DM_Kho KhoInterface
@inject PracticeInternship.Application.Interfaces.Interface_DM_NCC NCCInterface
@inject PracticeInternship.Application.Interfaces.Interface_DM_Nhap_Kho NhapKhoInterface
@using PracticeInternship.Domain.Entities
@using PracticeInternship.WebUI.Components.Pages.Sentence1
@rendermode InteractiveServer
@inject IModalService model
@inject NavigationManager NavigationManager


<PageTitle>Sentence 9</PageTitle>

<h1>Danh sách phiếu nhập cần in</h1>

@if (nhapKhos == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Số phiếu nhập</th>
                <th>Nhà cung cấp</th>
                <th>Kho</th>
                <th>Ngày nhập kho</th>
                <th>Trạng thái</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in nhapKhos)
            {
                <tr>
                    <td>@forecast.So_Phieu_Nhap_Kho</td>
                    <td>
                        @nccs!.FirstOrDefault(ncc => ncc.Id == forecast.NCC_Id)!.Ten_NCC
                    </td>
                    <td>
                        @khos!.FirstOrDefault(kho => kho.Id == forecast.Kho_Id)!.Ten_Kho
                    </td>
                    <td>@forecast.Ngay_Nhap_kho.ToString("dd/MM/yyyy hh:mm:ss")</td>
                    <td>
                        <a class="btn btn-success btn-sm rounded-1 shadow-none" href="@($"/sentence10/ViewDetail/{forecast.Id}")">In phiếu nhập</a>
                    </td>

                </tr>
            }
        </tbody>
    </table>
}


@code {
    // find id of table xnk_nhap_kho, if id exist, disable button edit

    public IEnumerable<DM_Kho>? khos { get; set; }
    public IEnumerable<DM_NCC>? nccs { get; set; }
    public IEnumerable<DM_Nhap_Kho>? nhapKhos { get; set; }
    protected override async Task OnInitializedAsync()
    {
        // Simulate asynchronous loading to demonstrate streaming rendering
        await Task.Delay(500);

        nccs = await NCCInterface.GetAllAsync();
        khos = await KhoInterface.GetAllAsync();
        nhapKhos = await NhapKhoInterface.GetAllAsync();
    }
}
