@page "/sentence16/reading"
@inject PracticeInternship.Application.Interfaces.Interface_DM_Xuat_kho XuatKhoInterface
@using PracticeInternship.Domain.Entities
@using PracticeInternship.Application.DTOs
@using PracticeInternship.WebUI.Components.Pages.Sentence1
@using MudBlazor
@using System.Globalization
@rendermode InteractiveServer
@inject IModalService model
@inject NavigationManager NavigationManager


<PageTitle>Sentence 16</PageTitle>
@{
    var culture = CultureInfo.GetCultureInfo("en-US");
    culture = (CultureInfo)culture.Clone();
    culture.NumberFormat.CurrencySymbol = "";
}
<h1>Báo cáo chi tiết hàng xuất</h1>
<div class="row align-items-center">
    <div class="col-md-4">
        <MudItem>
            <MudDateRangePicker @bind-DateRange="@_dateRange" Margin="Margin.Dense"
                                PlaceholderStart="Start Date" PlaceholderEnd="End Date"
                                PickerVariant="PickerVariant.Dialog" Label="Picker Date"
                                DateFormat="dd/MM/yyyy"
                                Clearable="@_clearable" />
        </MudItem>
    </div>
    <div class="col-md-2">
        <button class="btn btn-success" @onclick="Search" disabled="@IsLoading">Tìm kiếm</button>
    </div>
</div>

@if (IsLoading)
{
    <p><em>Đang tải dữ liệu...</em></p>
}
else if (xuatKhos == null || !xuatKhos.Any())
{
    <p><strong>Không có dữ liệu nào phù hợp với tìm kiếm.</strong></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Ngày xuất kho</th>
                <th>Số phiếu xuất</th>
                <th>Mã sản phẩm</th>
                <th>Tên sản phẩm</th>
                <th>SL xuất</th>
                <th>Đơn giá</th>
                <th>Trị giá</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in xuatKhos)
            {
                <tr>
                    <td>@forecast.Ngay_Xuat_Kho.ToString("dd/MM/yyyy hh:mm:ss")</td>
                    <td>
                        @forecast.So_Phieu_Xuat_Kho
                    </td>
                    <td>@forecast.Ma_San_Pham</td>
                    <td>@forecast.Ten_San_Pham</td>
                    <td>@forecast.SL_Xuat</td>
                    <td>@forecast.Don_Gia_Xuat.ToString("C", culture)</td>
                    <td>@forecast.Tri_Gia.ToString("C", culture)</td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    private DateRange _dateRange { get; set; } = new DateRange();
    public IEnumerable<DM_Xuat_Kho_Search_Ngay_Nhap_kho_Response>? xuatKhos { get; set; }
    private bool IsLoading { get; set; }
    private bool _clearable = true;

    private async Task Search()
    {
        try
        {
            IsLoading = true;
            xuatKhos = null;
            if (_dateRange.Start.HasValue || _dateRange.End.HasValue)
            {
                var start = _dateRange.Start!.Value.ToString("yyyy-MM-dd");
                var end = _dateRange.End!.Value.ToString("yyyy-MM-dd");
                xuatKhos = await XuatKhoInterface.GetAllDetailOfXuatKhoBySearchDate(start, end);
            }
            else
            {
                // Nếu không chọn ngày nào thì lấy hết tất cả
                xuatKhos = await XuatKhoInterface.GetAllDetailOfXuatKhoBySearchDate(null, null);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Lỗi khi tìm kiếm: {ex.Message}");
        }
        finally
        {
            IsLoading = false;
        }

    }

}
