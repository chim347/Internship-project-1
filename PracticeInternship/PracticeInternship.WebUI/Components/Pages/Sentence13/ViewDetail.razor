@page "/sentence13/ViewDetail/{id:Guid}"
@using System.Globalization
@using PracticeInternship.Application.DTOs
@using PracticeInternship.WebUI.Components.Pages.Sentence1
@inject PracticeInternship.Application.Interfaces.Interface_DM_Xuat_kho XuatKhoInterface
@inject PracticeInternship.Application.Interfaces.Interface_DM_Kho KhoInterface
@inject PracticeInternship.Application.Interfaces.Interface_DM_Xuat_Kho_Raw_Data DMXuatKhoRawDataInterface
@inject NavigationManager NavigationManager
@inject IToastService ToastService

@{
    var culture = CultureInfo.GetCultureInfo("en-US");
    culture = (CultureInfo)culture.Clone();
    culture.NumberFormat.CurrencySymbol = "";
}
<PageTitle>Thông tin phiếu xuất kho</PageTitle>
<h2 class="d-flex justify-content-center">PHIẾU XUẤT KHO</h2>
<div class="mb-3">Số phiếu xuất: </div>

<div class="table-responsive">
    <table class="table table-bordered text-center align-middle">
        <thead class="table-warning">
            <tr>
                <th style="width: 50px;">STT</th>
                <th style="width: 175px;">Mã Hàng</th>
                <th style="width: 325px;">Tên Hàng</th>
                <th style="width: 175px;">PO</th>
                <th style="width: 175px;">Số Chỉ Lệnh</th>
                <th style="width: 100px;">SL</th>
                <th style="width: 145px;">ĐVT</th>
                <th style="width: 125px;">Kiểm Kê</th>
                <th style="width: 175px;">Ghi Chú</th>
                <th style="width: 150px;">Hành động</th>
            </tr>
        </thead>
        <tbody>
            @if (dM_Xuat_Kho_Raw_Data_Response != null)
            {
                var count = 0;
                @foreach (var product in dM_Xuat_Kho_Raw_Data_Response)
                {
                    <tr>
                        <td>
                            @{
                                count = count + 1;
                            }
                            @count
                        </td>
                        <td>@product.Ma_San_Pham</td>
                        <td>@product.Ten_San_Pham</td>
                        <td></td>
                        <td></td>
                        <td>@product.SL_Xuat</td>
                        <td>@product.Ten_Don_Vi_Tinh</td>
                        <td></td>
                        <td>
                        </td>
                        <td>
                            <button class="btn btn-primary btn-sm me-1" @onclick="() => OpenDialogEdit(product)">Sửa</button>
                            <button class="btn btn-danger btn-sm me-1" @onclick="() => OpenDialogDelete(product)">Xóa</button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="6"><em>Không có dữ liệu</em></td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="8"></td>
                <td colspan="2">
                    <button class="btn btn-success btn-sm" @onclick="() => OpenDialogAdd()">Thêm sản phẩm</button>
                </td>
            </tr>
        </tfoot>
    </table>
</div>
<AddProductDialog Show="ShowDialogAdd" OnCancel="CloseDialogAdd" OnCreate="AddProduct" />
<DeleteConfirmDialog Show="ShowDialogDelete" OnCancel="CloseDialogDelete" OnDelete="DeleteProduct" />
<EditProductDialog Show="ShowDialogEdit" OnEdit="EditProduct" OnCancel="CloseDialogEdit" Product="dM_Xuat_Kho_Raw_Data_Edit" />

@code {
    #region View detail
    [Parameter]
    public string? Id { get; set; }

    [SupplyParameterFromForm]
    public DM_Xuat_Kho_Detail_Response? dM_Xuat_Kho_Detail_Response { get; set; }
    public ICollection<DM_Xuat_Kho_Raw_Data_Response>? dM_Xuat_Kho_Raw_Data_Response { get; set; }
    public IEnumerable<DM_Kho>? khos { get; set; }

    protected override async Task OnInitializedAsync()
    {
        dM_Xuat_Kho_Detail_Response ??= await XuatKhoInterface.GetDetailOfXuatKhoById(Guid.Parse(Id!));
        dM_Xuat_Kho_Raw_Data_Response = dM_Xuat_Kho_Detail_Response.List_DM_Xuat_Kho_Raw_Data_Response;
        khos = await KhoInterface.GetAllAsync();
    }
    #endregion

    #region Add Product
    // show dialog
    // thêm 1 list hoặc thêm 1 cái
    //public ICollection<DM_Xuat_Kho_Raw_Data_DTO_Version_2>? dM_San_Pham { get; set; }
    public DM_Xuat_Kho_Raw_Data_DTO_Version_2? dM_San_Pham { get; set; }
    [Parameter]
    public bool ShowDialogAdd { get; set; }
    [Parameter]
    public bool ShowDialogEdit { get; set; }
    [Parameter]
    public bool ShowDialogDelete { get; set; }

    private async void AddProduct(DM_Xuat_Kho_Raw_Data_DTO_Version_2 sanPham)
    {
        //dM_San_Pham ??= new List<DM_Xuat_Kho_Raw_Data_DTO_Version_2>();
        //dM_San_Pham?.Add(sanPham);
        dM_San_Pham = sanPham;
        dM_San_Pham.Xuat_Kho_Id = Id;
        ShowDialogAdd = false;

        await DMXuatKhoRawDataInterface.CreateAsync(dM_San_Pham);
        // chức năng reload lại trang => tốn tài nguyên vì chạy lại css, html của trang
        //NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);

        // chức năng get lại dữ liệu lên
        var updatedDetail = await XuatKhoInterface.GetDetailOfXuatKhoById(Guid.Parse(Id!));

        dM_Xuat_Kho_Detail_Response = updatedDetail;
        dM_Xuat_Kho_Raw_Data_Response = dM_Xuat_Kho_Detail_Response.List_DM_Xuat_Kho_Raw_Data_Response;
        khos = await KhoInterface.GetAllAsync();
        // Cập nhật giao diện
        StateHasChanged();
    }
    public void OpenDialogAdd()
    {
        ShowDialogAdd = true;
    }
    public void CloseDialogAdd()
    {
        ShowDialogAdd = false;
    }
    #endregion

    #region Edit product
    [Parameter]
    public required DM_Xuat_Kho_Raw_Data_Response dM_Xuat_Kho_Raw_Data_Edit { get; set; }
    private async void EditProduct(DM_Xuat_Kho_Raw_Data_Response entity)
    {
        var xuatKhoRawData = new DM_Xuat_Kho_Raw_Data_DTO_Edit
            {
                Id = entity.Id,
                SL_Xuat = entity.SL_Xuat,
                Don_Gia_Xuat = entity.Don_Gia_Xuat
            };

        await DMXuatKhoRawDataInterface.UpdateAsync(xuatKhoRawData);
        ShowDialogEdit = false;

        //var updateDetail = await NhapKhoInterface.GetDetailOfNhapKhoById(Guid.Parse(Id!));
        //dM_Nhap_Kho_Detail_Response = updateDetail;
        //dM_Nhap_Kho_Raw_Data_Response = dM_Nhap_Kho_Detail_Response.List_DM_Nhap_Kho_Raw_Data_Response;
        //khos = await KhoInterface.GetAllAsync();
        //nccs = await NCCInterface.GetAllAsync();
        //StateHasChanged();
        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);

    }
    public void OpenDialogEdit(DM_Xuat_Kho_Raw_Data_Response entity)
    {
        dM_Xuat_Kho_Raw_Data_Edit = entity;
        ShowDialogEdit = true;
    }
    public void CloseDialogEdit()
    {
        ShowDialogEdit = false;
    }
    #endregion

    #region Delete
    // lấy product đem đi xóa
    [Parameter]
    public required DM_Xuat_Kho_Raw_Data_Response dM_Xuat_Kho_Raw_Data { get; set; }
    private async void DeleteProduct()
    {
        var dm_San_Pham_Raw_Data = new DM_Xuat_Kho_Raw_Data
            {
                Id = Guid.Parse(dM_Xuat_Kho_Raw_Data.Id!),
                Xuat_Kho_Id = Guid.Parse(dM_Xuat_Kho_Raw_Data.Xuat_Kho_Id!),
                San_Pham_Id = Guid.Parse(dM_Xuat_Kho_Raw_Data.San_Pham_Id!),
                SL_Xuat = dM_Xuat_Kho_Raw_Data.SL_Xuat,
                Don_Gia_Xuat = dM_Xuat_Kho_Raw_Data.Don_Gia_Xuat
            };

        await DMXuatKhoRawDataInterface.DeleteAsync(dm_San_Pham_Raw_Data);
        ShowDialogDelete = false;

        var updateDetail = await XuatKhoInterface.GetDetailOfXuatKhoById(Guid.Parse(Id!));

        dM_Xuat_Kho_Detail_Response = updateDetail;
        dM_Xuat_Kho_Raw_Data_Response = dM_Xuat_Kho_Detail_Response.List_DM_Xuat_Kho_Raw_Data_Response;
        khos = await KhoInterface.GetAllAsync();
        StateHasChanged();
    }
    public void OpenDialogDelete(DM_Xuat_Kho_Raw_Data_Response entity)
    {
        dM_Xuat_Kho_Raw_Data = entity;
        ShowDialogDelete = true;
    }
    public void CloseDialogDelete()
    {
        ShowDialogDelete = false;
    }
    #endregion
}

